// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url      = env("DATABASE_URL")
  provider = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                      String      @id @default(cuid())
  name                    String      @default("")
  email                   String      @unique @default("")
  isAdmin                 Boolean     @default(false)
  password                String
  role                    Role?       @relation("User_role", fields: [roleId], references: [id])
  roleId                  String?     @map("role")
  department              Department? @relation("Department_users")
  from_Ticket_submittedBy Ticket[]    @relation("Ticket_submittedBy")
  from_Ticket_assignedTo  Ticket[]    @relation("Ticket_assignedTo")

  @@index([roleId])
}

model Group {
  id   String @id @default(cuid())
  name String @default("")
}

model Role {
  id               String  @id @default(cuid())
  name             String  @default("")
  canManageContent Boolean @default(false)
  canManageUsers   Boolean @default(false)
  users            User[]  @relation("User_role")
}

model Ticket {
  id            String    @id @default(cuid())
  subject       String    @default("")
  ticketNo      Int?
  post          String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  priority      Int?
  submitedOn    DateTime?
  submittedBy   User?     @relation("Ticket_submittedBy", fields: [submittedById], references: [id])
  submittedById String?   @map("submittedBy")
  assignedTo    User?     @relation("Ticket_assignedTo", fields: [assignedToId], references: [id])
  assignedToId  String?   @map("assignedTo")

  @@index([submittedById])
  @@index([assignedToId])
}

model Department {
  id      String  @id @default(cuid())
  name    String  @default("")
  code    String  @unique @default("")
  users   User?   @relation("Department_users", fields: [usersId], references: [id])
  usersId String? @unique @map("users")
}